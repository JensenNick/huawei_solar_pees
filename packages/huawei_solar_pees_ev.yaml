# -----------------------------------------
# HUAWEI SOLAR PEES EV - Electrical Veichle
# -----------------------------------------
# version:
# branch: alpha-026_incorporate-ev-charging
# domain: https://github.com/JensenNick/huawei_solar_pees
# codeowner: Nick Jensen
#
# This is the optional "Huawei Solar PEES EV package" which will provide you with
# power,energy and economy sensors related to a EV (electric vehicle) use case.
# This package can only be used along with the "Huawei Solar PEES package" and the
# code for the Lovelace card.
#
# You need to provide the sensor from your EV charger integration which provides
# you with the charging power in W.
#
# I recomend you "install" the "Huawei Solar PEES Input" file and the Lovelace Input
# card. This will make it possible for you to enter your specific sensor as a text
# input in the Lovelace card.
#
# The currency used is DKK by default. If you use another currency you need to change
# this in this file. I advice you not make any other changes.
#
# Restart Home Assistant and refresh your browser.
#
# -------
# SENSORS
# -------
sensor:
  ## ----------------------------------
  ## Huawei Solar PEES - Energy Sensors
  - platform: integration
    source: sensor.power_home_load
    name: "Energy Home Load (ps)"
    unique_id: energy_home_load_ps
    round: 6
    unit_prefix: k
    unit_time: h
    method: left
  - platform: integration
    source: sensor.power_home_yield
    name: "Energy Home Yield (ps)"
    unique_id: energy_home_yield_ps
    round: 6
    unit_prefix: k
    unit_time: h
    method: left
  - platform: integration
    source: sensor.power_ev_yield
    name: "Energy EV Yield (ps)"
    unique_id: energy_ev_yield_ps
    round: 6
    unit_prefix: k
    unit_time: h
    method: left
  - platform: integration
    source: sensor.power_home_battery
    name: "Energy Home Battery (ps)"
    unique_id: energy_home_battery_ps
    round: 6
    unit_prefix: k
    unit_time: h
    method: left
  - platform: integration
    source: sensor.power_ev_battery
    name: "Energy EV Battery (ps)"
    unique_id: energy_ev_battery_ps
    round: 6
    unit_prefix: k
    unit_time: h
    method: left
  - platform: integration
    source: sensor.power_home_grid
    name: "Energy Home Grid (ps)"
    unique_id: energy_home_grid_ps
    round: 6
    unit_prefix: k
    unit_time: h
    method: left
  - platform: integration
    source: sensor.power_ev_grid
    name: "Energy EV Grid (ps)"
    unique_id: energy_ev_grid_ps
    round: 6
    unit_prefix: k
    unit_time: h
    method: left
# ----------------
# TEMPLATE SENSORS
# ----------------
template:
  - sensor:
      ## ------------------
      ## Electricity Prices
      - name: "Electricity Price EV Charging"
        unique_id: electricity_price_ev_charging
        unit_of_measurement: DKK
        state_class: measurement
        state: >
          {% if is_state('input_text.electricity_ev_charging','') or
          is_state('input_text.electricity_price_ev_charging','unavailable') or
          is_state('input_text.electricity_price_ev_charging','unknown') %}
            {{ states('sensor.energi_data_service_reduced') | float(0) }}
          {% else %}
            {{ states(states('input_text.electricity_price_ev_charging')) | float(0) }}
          {% endif %}
      ## ------------------------------------
      ## Huawei Solar PEES EV - Power Sensors
      - name: "Power Home Load"
        unique_id: power_home_load
        unit_of_measurement: W
        state_class: measurement
        state: >
          {% if is_state('input_text.power_ev_charger','') or
          is_state('input_text.power_ev_charger','unavailable') or
          is_state('input_text.power_ev_charger','unknown') %}
            {{ states('sensor.power_house_load') | float(0) }}
          {% elif states('sensor.power_house_load') | float(0) >
          states(states('input_text.power_ev_charger')) | float(0) %}
            {{ states('sensor.power_house_load') | float(0) -
            states(states('input_text.power_ev_charger')) | float(0) }}
          {% else %}
            {{ 0 }}
          {% endif %}
      - name: "Power Home Yield"
        unique_id: power_home_yield
        unit_of_measurement: W
        state_class: measurement
        state: >
          {% if states('sensor.power_house_load_yield') | float(0) >=
          states('sensor.power_home_load') | float(0) %}
            {{ states('sensor.power_home_load') | float(0) }}
          {% else %}
            {{ states('sensor.power_house_load_yield') | float(0) }}
          {% endif %}
      - name: "Power EV Yield"
        unique_id: power_ev_yield
        unit_of_measurement: W
        state_class: measurement
        state: >
          {% if states('sensor.power_house_load_yield') | float(0) >=
          states('sensor.power_home_load') | float(0) %}
            {{ states('sensor.power_house_load_yield') | float(0) -
            states('sensor.power_home_load') | float(0) }}
          {% else %}
            {{ 0 }}
          {% endif %}
      - name: "Power Home Battery"
        unique_id: power_home_battery
        unit_of_measurement: W
        state_class: measurement
        state: >
          {% if states('sensor.power_battery_discharge_house') | float(0) >=
          states('sensor.power_home_load') | float(0) %}
            {{ states('sensor.power_home_load') | float(0) }}
          {% else %}
            {{ states('sensor.power_battery_discharge_house') | float(0) }}
          {% endif %}
      - name: "Power EV Battery"
        unique_id: power_ev_battery
        unit_of_measurement: W
        state_class: measurement
        state: >
          {% if states('sensor.power_battery_discharge_house') | float(0) >=
          states('sensor.power_home_load') | float(0) %}
            {{ states('sensor.power_battery_discharge_house') | float(0) -
            states('sensor.power_home_load') | float(0) }}
          {% else %}
            {{ 0 }}
          {% endif %}
      - name: "Power Home Grid"
        unique_id: power_home_grid
        unit_of_measurement: W
        state_class: measurement
        state: >
          {% if states('sensor.power_house_load_grid') | float(0) >=
          states('sensor.power_home_load') | float(0) %}
            {{ states('sensor.power_home_load') | float(0) }}
          {% else %}
            {{ states('sensor.power_house_load_grid') | float(0) }}
          {% endif %}
      - name: "Power EV Grid"
        unique_id: power_ev_grid
        unit_of_measurement: W
        state_class: measurement
        state: >
          {% if states('sensor.power_house_load_grid') | float(0) >=
          states('sensor.power_home_load') | float(0) %}
            {{ states('sensor.power_house_load_grid') | float(0) -
            states('sensor.power_home_load') | float(0) }}
          {% else %}
            {{ 0 }}
          {% endif %}

# -----------------------------------------------------
# HUAWEI SOLAR PEES - Power, Energy and Economy Sensors
# -----------------------------------------------------
# This is a complete package file with the sensors included in Huawei Solar PEES.
# Create a root folder named "packages".
# Import this file to the "packages-folder".
# Ad the following lines to your configuration.yaml file (remove the hashtag "#"
# and the 1 indentation).
#
# homeassistant:
#   packages: !include_dir_named packages
#
# Make sure the naming of your input sensors is correct.
# - 'sensor.inverter_input_power' (from the Huawei Solar integration)
# - 'sensor.inverter_input_power_2' (from the Huawei Solar integration)
# - 'sensor.power_meter_active_power' (from the Huawei Solar integration)
# - 'sensor.battery_charge_discharge_power' (from the Huawei Solar integration)
# - 'sensor.energi_data_service' (price pr. kWh you pay for purchase/import)
# - 'sensor.energi_data_service_sale' (price pr. kWh you receive for sale/export)
#
# The currency used in these sensors is DKK by default.
#
# Restart Home Assistant and refresh your browser.
#
# -------
# SENSORS
# -------
sensor:
  ## ----------------------------------
  ## Huawei Solar PEES - Energy Sensors
  - platform: integration
    source: sensor.power_battery_charge
    name: "Energy Battery Charge"
    unique_id: energy_battery_charge
    round: 6
    unit_prefix: k
    unit_time: h
    method: left
  - platform: integration
    source: sensor.power_battery_charge_grid
    name: "Energy Battery Charge Grid"
    unique_id: energy_battery_charge_grid
    round: 6
    unit_prefix: k
    unit_time: h
    method: left
  - platform: integration
    source: sensor.power_battery_charge_yield
    name: "Energy Battery Charge Yield"
    unique_id: energy_battery_charge_yield
    round: 6
    unit_prefix: k
    unit_time: h
    method: left
  - platform: integration
    source: sensor.power_battery_discharge
    name: "Energy Battery Discharge"
    unique_id: energy_battery_discharge
    round: 6
    unit_prefix: k
    unit_time: h
    method: left
  - platform: integration
    source: sensor.power_battery_discharge_grid
    name: "Energy Battery Discharge Grid"
    unique_id: energy_battery_discharge_grid
    round: 6
    unit_prefix: k
    unit_time: h
    method: left
  - platform: integration
    source: sensor.power_battery_discharge_house
    name: "Energy Battery Discharge House"
    unique_id: energy_battery_discharge_house
    round: 6
    unit_prefix: k
    unit_time: h
    method: left
  - platform: integration
    source: sensor.power_import
    name: "Energy Import"
    unique_id: energy_import
    round: 6
    unit_prefix: k
    unit_time: h
    method: left
  - platform: integration
    source: sensor.power_export
    name: "Energy Export"
    unique_id: energy_export
    round: 6
    unit_prefix: k
    unit_time: h
    method: left
  - platform: integration
    source: sensor.power_house_load
    name: "Energy House Load"
    unique_id: energy_house_load
    round: 6
    unit_prefix: k
    unit_time: h
    method: left
  - platform: integration
    source: sensor.power_house_load_grid
    name: "Energy House Load Grid"
    unique_id: energy_house_load_grid
    round: 6
    unit_prefix: k
    unit_time: h
    method: left
  - platform: integration
    source: sensor.power_house_load_yield
    name: "Energy House Load Yield"
    unique_id: energy_house_load_yield
    round: 6
    unit_prefix: k
    unit_time: h
    method: left
  - platform: integration
    source: sensor.power_inverter_1_input
    name: "Energy Yield #1"
    unique_id: energy_yield_1
    round: 6
    unit_prefix: k
    unit_time: h
    method: left
  - platform: integration
    source: sensor.power_inverter_2_input
    name: "Energy Yield #2"
    unique_id: energy_yield_2
    round: 6
    unit_prefix: k
    unit_time: h
    method: left
  - platform: integration
    source: sensor.power_export_yield
    name: "Energy Export Yield"
    unique_id: energy_export_yield
    round: 6
    unit_prefix: k
    unit_time: h
    method: left
# ----------------
# TEMPLATE SENSORS
# ----------------
template:
  - sensor:
      ## ---------------------------------
      ## Huawei Solar PEES - Power Sensors
      - name: "Power Inverter #1 Input"
        unique_id: power_inverter_1_input
        unit_of_measurement: W
        device_class: power
        state_class: measurement
        state: >
          {{ states('sensor.inverter_input_power') | float(0) }}
      - name: "Power Inverter #2 Input"
        unique_id: power_inverter_2_input
        unit_of_measurement: W
        device_class: power
        state_class: measurement
        state: >
          {{ states('sensor.inverter_input_power_2') | float(0) }}
      - name: "Power Inverter Input Total"
        unique_id: power_inverter_input_total
        unit_of_measurement: W
        device_class: power
        state_class: measurement
        state: >
          {{ states('sensor.power_inverter_1_input') | float(0) +
          states('sensor.power_inverter_2_input') | float(0) }}
      - name: "Power Export"
        unique_id: power_export
        unit_of_measurement: W
        device_class: power
        state_class: measurement
        state: >
          {{ (
          states('sensor.power_meter_active_power') | float(0)
          , 0 ) | max }}
      - name: "Power Import"
        unique_id: power_import
        unit_of_measurement: W
        device_class: power
        state_class: measurement
        state: >
          {{ (
          states('sensor.power_meter_active_power') | float(0)
          , 0 ) | min | abs }}
      - name: "Power Battery Charge"
        unique_id: power_battery_charge
        unit_of_measurement: W
        device_class: power
        state_class: measurement
        state: >
          {{ (
          states('sensor.battery_charge_discharge_power') | float(0)
          , 0 ) | max }}
      - name: "Power Battery Discharge"
        unique_id: power_battery_discharge
        unit_of_measurement: W
        device_class: power
        state_class: measurement
        state: >
          {{ (
          states('sensor.battery_charge_discharge_power') | float(0)
          , 0 ) | min | abs }}
      - name: "Power House Load"
        unique_id: power_house_load
        unit_of_measurement: W
        device_class: power
        state_class: measurement
        state: >
          {{ (
          states('sensor.power_inverter_1_input') | float(0) +
          states('sensor.power_inverter_2_input') | float(0) -
          states('sensor.power_meter_active_power') | float(0) -
          states('sensor.battery_charge_discharge_power') | float(0)
          , 0 ) | max }}
      - name: "Power House Load Yield"
        unique_id: power_house_load_yield
        unit_of_measurement: W
        device_class: power
        state_class: measurement
        state: >
          {% if states('sensor.power_house_load') | float(0) >
          ( states('sensor.power_inverter_1_input') | float(0) +
          states('sensor.power_inverter_2_input') | float(0) ) %}
            {{ states('sensor.power_inverter_1_input') | float(0) +
            states('sensor.power_inverter_2_input') | float(0) }}
          {% else %}
            {{ states('sensor.power_house_load') | float(0) }}
          {% endif %}
      - name: "Power Battery Charge Yield"
        unique_id: power_battery_charge_yield
        unit_of_measurement: W
        device_class: power
        state_class: measurement
        state: >
          {{ ( 
          states('sensor.power_inverter_1_input') | float(0) +
          states('sensor.power_inverter_2_input') | float(0) -
          states('sensor.power_house_load_yield') | float(0) -
          states('sensor.power_export') | float(0)
          , 0 ) | max }}
      - name: "Power Battery Charge Grid"
        unique_id: power_battery_charge_grid
        unit_of_measurement: W
        device_class: power
        state_class: measurement
        state: >
          {{ ( 
          states('sensor.power_battery_charge') | float(0) -
          states('sensor.power_battery_charge_yield') | float(0)
          , 0 ) | max }}
      - name: "Power Export Yield"
        unique_id: power_export_yield
        unit_of_measurement: W
        device_class: power
        state_class: measurement
        state: >
          {{ (
          states('sensor.power_inverter_1_input') | float(0) +
          states('sensor.power_inverter_2_input') | float(0) -
          states('sensor.power_house_load_yield') | float(0) -
          states('sensor.power_battery_charge_yield') | float(0)
          , 0 ) | max }}
      - name: "Power Battery Discharge Grid"
        unique_id: power_battery_discharge_grid
        unit_of_measurement: W
        device_class: power
        state_class: measurement
        state: >
          {{ (
          states('sensor.power_export') | float(0) -
          states('sensor.power_export_yield') | float(0)
          , 0 ) | max }}
      - name: "Power Battery Discharge House"
        unique_id: power_battery_discharge_house
        unit_of_measurement: W
        device_class: power
        state_class: measurement
        state: >
          {{ (
          states('sensor.power_battery_discharge') | float (0) -
          states('sensor.power_battery_discharge_grid') | float (0)
          , 0 ) | max }}
      - name: "Power House Load Grid"
        unique_id: power_house_load_grid
        unit_of_measurement: W
        device_class: power
        state_class: measurement
        state: >
          {{ ( 
          states('sensor.power_house_load') | float(0) -
          states('sensor.power_house_load_yield') | float(0) -
          states('sensor.power_battery_discharge_house') | float(0)
          , 0 ) | max }}
      ## ----------------------------------
      ## Huawei Solar PEES - Energy Sensors
      - name: "Energy Yield Total"
        unique_id: energy_yield_total
        unit_of_measurement: kWh
        device_class: energy
        state_class: total_increasing
        state: >
          {{ states('sensor.energy_yield_1') | float + 
          states('sensor.energy_yield_2') | float }}
        availability: >
          {{ has_value('sensor.energy_yield_1') and 
          has_value('sensor.energy_yield_2') }}
      ## ------------------------------
      ## Huawei Solar PEES - PV Economy
      - name: "PV Economy - Result wo PV"
        unique_id: pv_economy_result_wo_pv
        unit_of_measurement: DKK
        device_class: monetary
        state: >
          {{ states('sensor.house_load_cost_2') | float | round(5) }}
        availability: >
          {{ has_value('sensor.house_load_cost_2') }}
      - name: "PV Economy - Result w PV"
        unique_id: pv_economy_result_w_pv
        unit_of_measurement: DKK
        device_class: monetary
        state: >
          {{ ( 
          states('sensor.import_cost_2') | float -
          states('sensor.export_income_2') | float
          ) | round(5) }}
        availability: >
          {{ has_value('sensor.import_cost_2') and
          has_value('sensor.export_income_2') }}
      - name: "PV Economy - Expenses w PV"
        unique_id: pv_economy_expenses_w_pv
        unit_of_measurement: DKK
        device_class: monetary
        state: >
          {{ states('sensor.import_cost_2') | float | round(5) }}
        availability: >
          {{ has_value('sensor.import_cost_2') }}
      - name: "PV Economy - Income w PV"
        unique_id: pv_economy_income_w_pv
        unit_of_measurement: DKK
        device_class: monetary
        state: >
          {{ states('sensor.export_income_2') | float | round(5) }}
        availability: >
          {{ has_value('sensor.export_income_2') }}
      - name: "PV Economy - NRI PV"
        unique_id: pv_economy_nri_pv
        unit_of_measurement: DKK
        device_class: monetary
        state: >
          {{ ( 
          states('sensor.house_load_cost_2') | float -
          states('sensor.import_cost_2') | float +
          states('sensor.export_income_2') | float
          ) | round(5) }}
        availability: >
          {{ has_value('sensor.house_load_cost_2') and
          has_value('sensor.import_cost_2') and
          has_value('sensor.export_income_2') }}
      - name: "PV Economy - NRI Battery"
        unique_id: pv_economy_nri_battery
        unit_of_measurement: DKK
        device_class: monetary
        state: >
          {{ (
          states('sensor.battery_discharge_grid_sale_2') | float +
          states('sensor.battery_discharge_house_saving_2') | float -
          states('sensor.battery_charge_yield_sale_2') | float -
          states('sensor.battery_charge_grid_cost_2') | float
          ) | round(5) }}
        availability: >
          {{ has_value('sensor.battery_discharge_grid_sale_2') and
          has_value('sensor.battery_discharge_house_saving_2') and
          has_value('sensor.battery_charge_yield_sale_2') and
          has_value('sensor.battery_charge_grid_cost_2') }}
  # ------------------------
  # TEMPLATE TRIGGER SENSORS
  # ------------------------
  ## -----------------------------------
  ## Huawei Solar PEES - Economy Sensors
  - trigger:
      - platform: state
        entity_id:
          - sensor.energy_battery_charge_grid
    sensor:
      - name: "Battery Charge Grid - Cost"
        unique_id: battery_charge_grid_cost
        device_class: monetary
        unit_of_measurement: DKK
        state: >
          {% set price = states('sensor.energi_data_service') | float(0) %}
          {% set meter = states('sensor.energy_battery_charge_grid') | float(0) %}
          {% if meter > 0 and this.attributes.last is defined %}
            {% set delta = meter - this.attributes.last | float(0) %}
          {% else %}
            {% set delta = 0 %}
          {% endif %}
          {{ price * delta }}
        attributes:
          last: >
            {% if this.attributes.last is defined %}
              {% set lastlast = this.attributes.last | float(0) %}
            {% else %}
              {% set lastlast = 0 %}
            {% endif %}
            {% set meter = states('sensor.energy_battery_charge_grid') | float(0) %}
            {% if meter > 0 %}
              {{ meter }}
            {% else %}
              {{ lastlast }}
            {% endif %}
  - trigger:
      - platform: state
        entity_id:
          - sensor.energy_battery_charge_yield
    sensor:
      - name: "Battery Charge Yield - Sale"
        unique_id: battery_charge_yield_sale
        device_class: monetary
        unit_of_measurement: DKK
        state: >
          {% set price = states('sensor.energi_data_service_sale') | float(0) %}
          {% set meter = states('sensor.energy_battery_charge_yield') | float(0) %}
          {% if meter > 0 and this.attributes.last is defined %}
            {% set delta = meter - this.attributes.last | float(0) %}
          {% else %}
            {% set delta = 0 %}
          {% endif %}
          {{ price * delta }}
        attributes:
          last: >
            {% if last is defined %}
              {% set lastlast = states('sensor.energy_yield_total', 'last') | float(0) %}
            {% else %}
              {% set lastlast = 0 %}
            {% endif %}
            {% set last = states('sensor.energy_yield_total') | float(0) %}
            {% if last > 0 %}
              {{ states('sensor.energy_yield_total', 'last') | float(0) }}
            {% endif %}
  - trigger:
      - platform: state
        entity_id:
          - sensor.energy_battery_discharge_house
    sensor:
      - name: "Battery Discharge House - Saving"
        unique_id: battery_discharge_house_saving
        device_class: monetary
        unit_of_measurement: DKK
        state: >
          {% set price = states('sensor.energi_data_service') | float(0) %}
          {% set meter = states('sensor.energy_battery_discharge_house') | float(0) %}
          {% if meter > 0 and this.attributes.last is defined %}
            {% set delta = meter - this.attributes.last | float(0) %}
          {% else %}
            {% set delta = 0 %}
          {% endif %}
          {{ price * delta }}
        attributes:
          last: >
            {% if this.attributes.last is defined %}
              {% set lastlast = this.attributes.last | float(0) %}
            {% else %}
              {% set lastlast = 0 %}
            {% endif %}
            {% set meter = states('sensor.energy_battery_discharge_house') | float(0) %}
            {% if meter > 0 %}
              {{ meter }}
            {% else %}
              {{ lastlast }}
            {% endif %}
  - trigger:
      - platform: state
        entity_id:
          - sensor.energy_battery_discharge_grid
    sensor:
      - name: "Battery Discharge Grid - Sale"
        unique_id: battery_discharge_grid_sale
        device_class: monetary
        unit_of_measurement: DKK
        state: >
          {% set price = states('sensor.energi_data_service_sale') | float(0) %}
          {% set meter = states('sensor.energy_battery_discharge_grid') | float(0) %}
          {% if meter > 0 and this.attributes.last is defined %}
            {% set delta = meter - this.attributes.last | float(0) %}
          {% else %}
            {% set delta = 0 %}
          {% endif %}
          {{ price * delta }}
        attributes:
          last: >
            {% if this.attributes.last is defined %}
              {% set lastlast = this.attributes.last | float(0) %}
            {% else %}
              {% set lastlast = 0 %}
            {% endif %}
            {% set meter = states('sensor.energy_battery_discharge_grid') | float(0) %}
            {% if meter > 0 %}
              {{ meter }}
            {% else %}
              {{ lastlast }}
            {% endif %}
  - trigger:
      - platform: state
        entity_id:
          - sensor.energy_export
    sensor:
      - name: "Export - Income"
        unique_id: export_income
        device_class: monetary
        unit_of_measurement: DKK
        state: >
          {% set price = states('sensor.energi_data_service_sale') | float(0) %}
          {% set meter = states('sensor.energy_export') | float(0) %}
          {% if meter > 0 and this.attributes.last is defined %}
            {% set delta = meter - this.attributes.last | float(0) %}
          {% else %}
            {% set delta = 0 %}
          {% endif %}
          {{ price * delta }}
        attributes:
          last: >
            {% if this.attributes.last is defined %}
              {% set lastlast = this.attributes.last | float(0) %}
            {% else %}
              {% set lastlast = 0 %}
            {% endif %}
            {% set meter = states('sensor.energy_export') | float(0) %}
            {% if meter > 0 %}
              {{ meter }}
            {% else %}
              {{ lastlast }}
            {% endif %}
  - trigger:
      - platform: state
        entity_id:
          - sensor.energy_import
    sensor:
      - name: "Import - Cost"
        unique_id: import_cost
        device_class: monetary
        unit_of_measurement: DKK
        state: >
          {% set price = states('sensor.energi_data_service') | float(0) %}
          {% set meter = states('sensor.energy_import') | float(0) %}
          {% if meter > 0 and this.attributes.last is defined %}
            {% set delta = meter - this.attributes.last | float(0) %}
          {% else %}
            {% set delta = 0 %}
          {% endif %}
          {{ price * delta }}
        attributes:
          last: >
            {% if this.attributes.last is defined %}
              {% set lastlast = this.attributes.last | float(0) %}
            {% else %}
              {% set lastlast = 0 %}
            {% endif %}
            {% set meter = states('sensor.energy_import') | float(0) %}
            {% if meter > 0 %}
              {{ meter }}
            {% else %}
              {{ lastlast }}
            {% endif %}
  - trigger:
      - platform: state
        entity_id:
          - sensor.energy_house_load
    sensor:
      - name: "House Load - Cost"
        unique_id: house_load_cost
        device_class: monetary
        unit_of_measurement: DKK
        state: >
          {% set price = states('sensor.energi_data_service') | float(0) %}
          {% set meter = states('sensor.energy_house_load') | float(0) %}
          {% if meter > 0 and this.attributes.last is defined %}
            {% set delta = meter - this.attributes.last | float(0) %}
          {% else %}
            {% set delta = 0 %}
          {% endif %}
          {{ price * delta }}
        attributes:
          last: >
            {% if this.attributes.last is defined %}
              {% set lastlast = this.attributes.last | float(0) %}
            {% else %}
              {% set lastlast = 0 %}
            {% endif %}
            {% set meter = states('sensor.energy_house_load') | float(0) %}
            {% if meter > 0 %}
              {{ meter }}
            {% else %}
              {{ lastlast }}
            {% endif %}
  - trigger:
      - platform: state
        entity_id:
          - sensor.energy_house_load_grid
    sensor:
      - name: "House Load Grid - Cost"
        unique_id: house_load_grid_cost
        device_class: monetary
        unit_of_measurement: DKK
        state: >
          {% set price = states('sensor.energi_data_service') | float(0) %}
          {% set meter = states('sensor.energy_house_load_grid') | float(0) %}
          {% if meter > 0 and this.attributes.last is defined %}
            {% set delta = meter - this.attributes.last | float(0) %}
          {% else %}
            {% set delta = 0 %}
          {% endif %}
          {{ price * delta }}
        attributes:
          last: >
            {% if this.attributes.last is defined %}
              {% set lastlast = this.attributes.last | float(0) %}
            {% else %}
              {% set lastlast = 0 %}
            {% endif %}
            {% set meter = states('sensor.energy_house_load_grid') | float(0) %}
            {% if meter > 0 %}
              {{ meter }}
            {% else %}
              {{ lastlast }}
            {% endif %}
  - trigger:
      - platform: state
        entity_id:
          - sensor.energy_house_load_yield
    sensor:
      - name: "House Load Yield - Saving"
        unique_id: house_load_yield_saving
        device_class: monetary
        unit_of_measurement: DKK
        state: >
          {% set price = states('sensor.energi_data_service') | float(0) %}
          {% set meter = states('sensor.energy_house_load_yield') | float(0) %}
          {% if meter > 0 and this.attributes.last is defined %}
            {% set delta = meter - this.attributes.last | float(0) %}
          {% else %}
            {% set delta = 0 %}
          {% endif %}
          {{ price * delta }}
        attributes:
          last: >
            {% if this.attributes.last is defined %}
              {% set lastlast = this.attributes.last | float(0) %}
            {% else %}
              {% set lastlast = 0 %}
            {% endif %}
            {% set meter = states('sensor.energy_house_load_yield') | float(0) %}
            {% if meter > 0 %}
              {{ meter }}
            {% else %}
              {{ lastlast }}
            {% endif %}
  - trigger:
      - platform: state
        entity_id:
          - sensor.energy_export_yield
    sensor:
      - name: "Export Yield - Sale"
        unique_id: export_yield_sale
        device_class: monetary
        unit_of_measurement: DKK
        state: >
          {% set price = states('sensor.energi_data_service_sale') | float(0) %}
          {% set meter = states('sensor.energy_export_yield') | float(0) %}
          {% if meter > 0 and this.attributes.last is defined %}
            {% set delta = meter - this.attributes.last | float(0) %}
          {% else %}
            {% set delta = 0 %}
          {% endif %}
          {{ price * delta }}
        attributes:
          last: >
            {% if this.attributes.last is defined %}
              {% set lastlast = this.attributes.last | float(0) %}
            {% else %}
              {% set lastlast = 0 %}
            {% endif %}
            {% set meter = states('sensor.energy_export_yield') | float(0) %}
            {% if meter > 0 %}
              {{ meter }}
            {% else %}
              {{ lastlast }}
            {% endif %}
# --------------
# UTILITY METERS
# --------------
utility_meter:
  ## ----------------------------------
  ## Huawei Solar PEES - Utility Meters
  battery_charge_grid_cost_2:
    source: sensor.battery_charge_grid_cost
    name: "Battery Charge Grid (Cost)"
    unique_id: battery_charge_grid_cost_2
    delta_values: true
  battery_charge_yield_sale_2:
    source: sensor.battery_charge_yield_sale
    name: "Battery Charge Yield (Sale)"
    unique_id: battery_charge_yield_sale_2
    delta_values: true
  battery_discharge_house_saving_2:
    source: sensor.battery_discharge_house_saving
    name: "Battery Discharge House (Saving)"
    unique_id: battery_discharge_house_saving_2
    delta_values: true
  battery_discharge_grid_sale_2:
    source: sensor.battery_discharge_grid_sale
    name: "Battery Discharge Grid (Sale)"
    unique_id: battery_discharge_grid_sale_2
    delta_values: true
  export_income_2:
    source: sensor.export_income
    name: "Export (Income)"
    unique_id: export_income_2
    delta_values: true
  import_cost_2:
    source: sensor.import_cost
    name: "Import (Cost)"
    unique_id: import_cost_2
    delta_values: true
  house_load_cost_2:
    source: sensor.house_load_cost
    name: "House Load (Cost)"
    unique_id: house_load_cost_2
    delta_values: true
  house_load_grid_cost_2:
    source: sensor.house_load_grid_cost
    name: "House Load Grid (Cost)"
    unique_id: house_load_grid_cost_2
    delta_values: true
  house_load_yield_saving_2:
    source: sensor.house_load_yield_saving
    name: "House Load Yield (Saving)"
    unique_id: house_load_yield_saving_2
    delta_values: true
  export_yield_sale_2:
    source: sensor.energy_export_yield
    name: "Export Yield (Sale)"
    unique_id: export_yield_sale_2
    delta_values: true
  ## ---------------------------------------------
  ## Huawei Solar PEES - PV Economy Utility Meters
  ### PV Economy - Result without PV
  hourly_pv_economy_result_wo_pv:
    source: sensor.pv_economy_result_wo_pv
    name: "Hourly PV Economy - Result wo PV"
    cycle: hourly
  daily_pv_economy_result_wo_pv:
    source: sensor.pv_economy_result_wo_pv
    name: "Daily PV Economy - Result wo PV"
    cycle: daily
  monthly_pv_economy_result_wo_pv:
    source: sensor.pv_economy_result_wo_pv
    name: "Monthly PV Economy - Result wo PV"
    cycle: monthly
  quarterly_pv_economy_result_wo_pv:
    source: sensor.pv_economy_result_wo_pv
    name: "Quarterly PV Economy - Result wo PV"
    cycle: quarterly
  yearly_pv_economy_result_wo_pv:
    source: sensor.pv_economy_result_wo_pv
    name: "Yearly PV Economy - Result wo PV"
    cycle: yearly
  ### PV Economy - Result with PV
  hourly_pv_economy_result_w_pv:
    source: sensor.pv_economy_result_w_pv
    name: "Hourly PV Economy - Result w PV"
    cycle: hourly
    net_consumption: true
  daily_pv_economy_result_w_pv:
    source: sensor.pv_economy_result_w_pv
    name: "Daily PV Economy - Result w PV"
    cycle: daily
    net_consumption: true
  monthly_pv_economy_result_w_pv:
    source: sensor.pv_economy_result_w_pv
    name: "Monthly PV Economy - Result w PV"
    cycle: monthly
    net_consumption: true
  quarterly_pv_economy_result_w_pv:
    source: sensor.pv_economy_result_w_pv
    name: "Quarterly PV Economy - Result w PV"
    cycle: quarterly
    net_consumption: true
  yearly_pv_economy_result_w_pv:
    source: sensor.pv_economy_result_w_pv
    name: "Yearly PV Economy - Result w PV"
    cycle: yearly
    net_consumption: true
  ### PV Economy - Expenses
  hourly_pv_economy_expenses_w_pv:
    source: sensor.pv_economy_expenses_w_pv
    name: "Hourly PV Economy - Expenses w PV"
    cycle: hourly
  daily_pv_economy_expenses_w_pv:
    source: sensor.pv_economy_expenses_w_pv
    name: "Daily PV Economy - Expenses w PV"
    cycle: daily
  monthly_pv_economy_expenses_w_pv:
    source: sensor.pv_economy_expenses_w_pv
    name: "Monthly PV Economy - Expenses w PV"
    cycle: monthly
  quarterly_pv_economy_expenses_w_pv:
    source: sensor.pv_economy_expenses_w_pv
    name: "Quarterly PV Economy - Expenses w PV"
    cycle: quarterly
  yearly_pv_economy_expenses_w_pv:
    source: sensor.pv_economy_expenses_w_pv
    name: "Yearly PV Economy - Expenses w PV"
    cycle: yearly
  ### PV Economy - Income
  hourly_pv_economy_income_w_pv:
    source: sensor.pv_economy_income_w_pv
    name: "Hourly PV Economy - Income w PV"
    cycle: hourly
  daily_pv_economy_income_w_pv:
    source: sensor.pv_economy_income_w_pv
    name: "Daily PV Economy - Income w PV"
    cycle: daily
  monthly_pv_economy_income_w_pv:
    source: sensor.pv_economy_income_w_pv
    name: "Monthly PV Economy - Income w PV"
    cycle: monthly
  quarterly_pv_economy_income_w_pv:
    source: sensor.pv_economy_income_w_pv
    name: "Quarterly PV Economy - Income w PV"
    cycle: quarterly
  yearly_pv_economy_income_w_pv:
    source: sensor.pv_economy_income_w_pv
    name: "Yearly PV Economy - Income w PV"
    cycle: yearly
  ### PV Economy - Net Return on Investment PV
  hourly_pv_economy_nri_pv:
    source: sensor.pv_economy_nri_pv
    name: "Hourly PV Economy - NRI PV"
    cycle: hourly
    net_consumption: true
  daily_pv_economy_nri_pv:
    source: sensor.pv_economy_nri_pv
    name: "Daily PV Economy - NRI PV"
    cycle: daily
    net_consumption: true
  monthly_pv_economy_nri_pv:
    source: sensor.pv_economy_nri_pv
    name: "Monthly PV Economy - NRI PV"
    cycle: monthly
    net_consumption: true
  quarterly_pv_economy_nri_pv:
    source: sensor.pv_economy_nri_pv
    name: "Quarterly PV Economy - NRI PV"
    cycle: quarterly
    net_consumption: true
  yearly_pv_economy_nri_pv:
    source: sensor.pv_economy_nri_pv
    name: "Yearly PV Economy - NRI PV"
    cycle: yearly
    net_consumption: true
  ### PV Economy - Net Return on Investment Battery
  hourly_pv_economy_nri_battery:
    source: sensor.pv_economy_nri_battery
    name: "Hourly PV Economy - NRI Battery"
    cycle: hourly
    net_consumption: true
  daily_pv_economy_nri_battery:
    source: sensor.pv_economy_nri_battery
    name: "Daily PV Economy - NRI Battery"
    cycle: daily
    net_consumption: true
  monthly_pv_economy_nri_battery:
    source: sensor.pv_economy_nri_battery
    name: "Monthly PV Economy - NRI Battery"
    cycle: monthly
    net_consumption: true
  quarterly_pv_economy_nri_battery:
    source: sensor.pv_economy_nri_battery
    name: "Quarterly PV Economy - NRI Battery"
    cycle: quarterly
    net_consumption: true
  yearly_pv_economy_nri_battery:
    source: sensor.pv_economy_nri_battery
    name: "Yearly PV Economy - NRI Battery"
    cycle: yearly
    net_consumption: true
  ## -------------------------------------------
  ## Huawei Solar PEES - Optional Utility Meters
  ### Battery Charge
  #### Energy
  hourly_battery_charge_energy:
    source: sensor.energy_battery_charge
    name: "Hourly Battery Charge (Energy)"
    cycle: hourly
  daily_battery_charge_energy:
    source: sensor.energy_battery_charge
    name: "Daily Battery Charge (Energy)"
    cycle: daily
  monthly_battery_charge_energy:
    source: sensor.energy_battery_charge
    name: "Monthly Battery Charge (Energy)"
    cycle: monthly
  quarterly_battery_charge_energy:
    source: sensor.energy_battery_charge
    name: "Quarterly Battery Charge (Energy)"
    cycle: quarterly
  yearly_battery_charge_energy:
    source: sensor.energy_battery_charge
    name: "Yearly Battery Charge (Energy)"
    cycle: yearly
  ### Battery Charge Grid
  #### Energy
  hourly_battery_charge_grid_energy:
    source: sensor.energy_battery_charge_grid
    name: "Hourly Battery Charge Grid (Energy)"
    cycle: hourly
  daily_battery_charge_grid_energy:
    source: sensor.energy_battery_charge_grid
    name: "Daily Battery Charge Grid (Energy)"
    cycle: daily
  monthly_battery_charge_grid_energy:
    source: sensor.energy_battery_charge_grid
    name: "Monthly Battery Charge Grid (Energy)"
    cycle: monthly
  quarterly_battery_charge_grid_energy:
    source: sensor.energy_battery_charge_grid
    name: "Quarterly Battery Charge Grid (Energy)"
    cycle: quarterly
  yearly_battery_charge_grid_energy:
    source: sensor.energy_battery_charge_grid
    name: "Yearly Battery Charge Grid (Energy)"
    cycle: yearly
  #### Cost
  hourly_battery_charge_grid_cost:
    source: sensor.battery_charge_grid_cost_2
    name: "Hourly Battery Charge Grid (Cost)"
    cycle: hourly
  daily_battery_charge_grid_cost:
    source: sensor.battery_charge_grid_cost_2
    name: "Daily Battery Charge Grid (Cost)"
    cycle: daily
  monthly_battery_charge_grid_cost:
    source: sensor.battery_charge_grid_cost_2
    name: "Monthly Battery Charge Grid (Cost)"
    cycle: monthly
  quarterly_battery_charge_grid_cost:
    source: sensor.battery_charge_grid_cost_2
    name: "Quarterly Battery Charge Grid (Cost)"
    cycle: quarterly
  yearly_battery_charge_grid_cost:
    source: sensor.battery_charge_grid_cost_2
    name: "Yearly Battery Charge Grid (Cost)"
    cycle: yearly
  ### Battery Charge Yield
  #### Energy
  hourly_battery_charge_yield_energy:
    source: sensor.energy_battery_charge_yield
    name: "Hourly Battery Charge Yield (Energy)"
    cycle: hourly
  daily_battery_charge_yield_energy:
    source: sensor.energy_battery_charge_yield
    name: "Daily Battery Charge Yield (Energy)"
    cycle: daily
  monthly_battery_charge_yield_energy:
    source: sensor.energy_battery_charge_yield
    name: "Monthly Battery Charge Yield (Energy)"
    cycle: monthly
  quarterly_battery_charge_yield_energy:
    source: sensor.energy_battery_charge_yield
    name: "Quarterly Battery Charge Yield (Energy)"
    cycle: quarterly
  yearly_battery_charge_yield_energy:
    source: sensor.energy_battery_charge_yield
    name: "Yearly Battery Charge Yield (Energy)"
    cycle: yearly
  #### Sale
  hourly_battery_charge_yield_sale:
    source: sensor.battery_charge_yield_sale_2
    name: "Hourly Battery Charge Yield (Sale)"
    cycle: hourly
  daily_battery_charge_yield_sale:
    source: sensor.battery_charge_yield_sale_2
    name: "Daily Battery Charge Yield (Sale)"
    cycle: daily
  monthly_battery_charge_yield_sale:
    source: sensor.battery_charge_yield_sale_2
    name: "Monthly Battery Charge Yield (Sale)"
    cycle: monthly
  quarterly_battery_charge_yield_sale:
    source: sensor.battery_charge_yield_sale_2
    name: "Quarterly Battery Charge Yield (Sale)"
    cycle: quarterly
  yearly_battery_charge_yield_sale:
    source: sensor.battery_charge_yield_sale_2
    name: "Yearly Battery Charge Yield (Sale)"
    cycle: yearly
    ### Battery Discharge
  #### Energy
  hourly_battery_discharge_energy:
    source: sensor.energy_battery_discharge
    name: "Hourly Battery Discharge (Energy)"
    cycle: hourly
  daily_battery_discharge_energy:
    source: sensor.energy_battery_discharge
    name: "Daily Battery Discharge (Energy)"
    cycle: daily
  monthly_battery_discharge_energy:
    source: sensor.energy_battery_discharge
    name: "Monthly Battery Discharge (Energy)"
    cycle: monthly
  quarterly_battery_discharge_energy:
    source: sensor.energy_battery_discharge
    name: "Quarterly Battery Discharge (Energy)"
    cycle: quarterly
  yearly_battery_discharge_energy:
    source: sensor.energy_battery_discharge
    name: "Yearly Battery Discharge (Energy)"
    cycle: yearly
    ### Battery Discharge Grid
  #### Energy
  hourly_battery_discharge_grid_energy:
    source: sensor.energy_battery_discharge_grid
    name: "Hourly Battery Discharge Grid (Energy)"
    cycle: hourly
  daily_battery_discharge_grid_energy:
    source: sensor.energy_battery_discharge_grid
    name: "Daily Battery Discharge Grid (Energy)"
    cycle: daily
  monthly_battery_discharge_grid_energy:
    source: sensor.energy_battery_discharge_grid
    name: "Monthly Battery Discharge Grid (Energy)"
    cycle: monthly
  quarterly_battery_discharge_grid_energy:
    source: sensor.energy_battery_discharge_grid
    name: "Quarterly Battery Discharge Grid (Energy)"
    cycle: quarterly
  yearly_battery_discharge_grid_energy:
    source: sensor.energy_battery_discharge_grid
    name: "Yearly Battery Discharge Grid (Energy)"
    cycle: yearly
  #### Sale
  hourly_battery_discharge_grid_sale:
    source: sensor.battery_discharge_grid_sale_2
    name: "Hourly Battery Discharge Grid (Sale)"
    cycle: hourly
  daily_battery_discharge_grid_sale:
    source: sensor.battery_discharge_grid_sale_2
    name: "Daily Battery Discharge Grid (Sale)"
    cycle: daily
  monthly_battery_discharge_grid_sale:
    source: sensor.battery_discharge_grid_sale_2
    name: "Monthly Battery Discharge Grid (Sale)"
    cycle: monthly
  quarterly_battery_discharge_grid_sale:
    source: sensor.battery_discharge_grid_sale_2
    name: "Quarterly Battery Discharge Grid (Sale)"
    cycle: quarterly
  yearly_battery_discharge_grid_sale:
    source: sensor.battery_discharge_grid_sale_2
    name: "Yearly Battery Discharge Grid (Sale)"
    cycle: yearly
  ### Battery Discharge House
  #### Energy
  hourly_battery_discharge_house_energy:
    source: sensor.energy_battery_discharge_house
    name: "Hourly Battery Discharge House (Energy)"
    cycle: hourly
  daily_battery_discharge_house_energy:
    source: sensor.energy_battery_discharge_house
    name: "Daily Battery Discharge House (Energy)"
    cycle: daily
  monthly_battery_discharge_house_energy:
    source: sensor.energy_battery_discharge_house
    name: "Monthly Battery Discharge House (Energy)"
    cycle: monthly
  quarterly_battery_discharge_house_energy:
    source: sensor.energy_battery_discharge_house
    name: "Quarterly Battery Discharge House (Energy)"
    cycle: quarterly
  yearly_battery_discharge_house_energy:
    source: sensor.energy_battery_discharge_house
    name: "Yearly Battery Discharge House (Energy)"
    cycle: yearly
  #### Saving
  hourly_battery_discharge_house_saving:
    source: sensor.battery_discharge_house_saving_2
    name: "Hourly Battery Discharge House (Saving)"
    cycle: hourly
  daily_battery_discharge_house_saving:
    source: sensor.battery_discharge_house_saving_2
    name: "Daily Battery Discharge House (Saving)"
    cycle: daily
  monthly_battery_discharge_house_saving:
    source: sensor.battery_discharge_house_saving_2
    name: "Monthly Battery Discharge House (Saving)"
    cycle: monthly
  quarterly_battery_discharge_house_saving:
    source: sensor.battery_discharge_house_saving_2
    name: "Quarterly Battery Discharge House (Saving)"
    cycle: quarterly
  yearly_battery_discharge_house_saving:
    source: sensor.battery_discharge_house_saving_2
    name: "Yearly Battery Discharge House (Saving)"
    cycle: yearly
  ### Export
  #### Energy
  hourly_energy_export:
    source: sensor.energy_export
    name: "Hourly Export (Energy)"
    cycle: hourly
  daily_energy_export:
    source: sensor.energy_export
    name: "Daily Export (Energy)"
    cycle: daily
  monthly_energy_export:
    source: sensor.energy_export
    name: "Monthly Export (Energy)"
    cycle: monthly
  quarterly_energy_export:
    source: sensor.energy_export
    name: "Quarterly Export (Energy)"
    cycle: quarterly
  yearly_energy_export:
    source: sensor.energy_export
    name: "Yearly Export (Energy)"
    cycle: yearly
  #### Income
  hourly_export_income:
    source: sensor.export_income_2
    name: "Hourly Export (Income)"
    cycle: hourly
  daily_export_income:
    source: sensor.export_income_2
    name: "Daily Export (Income)"
    cycle: daily
  monthly_export_income:
    source: sensor.export_income_2
    name: "Monthly Export (Income)"
    cycle: monthly
  quarterly_export_income:
    source: sensor.export_income_2
    name: "Quarterly Export (Income)"
    cycle: quarterly
  yearly_export_income:
    source: sensor.export_income_2
    name: "Yearly Export (Income)"
    cycle: yearly
  ### House Load
  #### Energy
  hourly_house_load_energy:
    source: sensor.energy_house_load
    name: "Hourly House Load (Energy)"
    cycle: hourly
  daily_house_load_energy:
    source: sensor.energy_house_load
    name: "Daily House Load (Energy)"
    cycle: daily
  monthly_house_load_energy:
    source: sensor.energy_house_load
    name: "Monthly House Load (Energy)"
    cycle: monthly
  quarterly_house_load_energy:
    source: sensor.energy_house_load
    name: "Quarterly House Load (Energy)"
    cycle: quarterly
  yearly_house_load_energy:
    source: sensor.energy_house_load
    name: "Yearly House Load (Energy)"
    cycle: yearly
  #### Cost
  hourly_house_load_cost:
    source: sensor.house_load_cost_2
    name: "Hourly House Load (Cost)"
    cycle: hourly
  daily_house_load_cost:
    source: sensor.house_load_cost_2
    name: "Daily House Load (Cost)"
    cycle: daily
  monthly_house_load_cost:
    source: sensor.house_load_cost_2
    name: "Monthly House Load (Cost)"
    cycle: monthly
  quarterly_house_load_cost:
    source: sensor.house_load_cost_2
    name: "Quarterly House Load (Cost)"
    cycle: quarterly
  yearly_house_load_cost:
    source: sensor.house_load_cost_2
    name: "Yearly House Load (Cost)"
    cycle: yearly
  ### House Load Grid
  #### Energy
  hourly_house_load_grid_energy:
    source: sensor.energy_house_load_grid
    name: "Hourly House Load Grid (Energy)"
    cycle: hourly
  daily_house_load_grid_energy:
    source: sensor.energy_house_load_grid
    name: "Daily House Load Grid (Energy)"
    cycle: daily
  monthly_house_load_grid_energy:
    source: sensor.energy_house_load_grid
    name: "Monthly House Load Grid (Energy)"
    cycle: monthly
  quarterly_house_load_grid_energy:
    source: sensor.energy_house_load_grid
    name: "Quarterly House Load Grid (Energy)"
    cycle: quarterly
  yearly_house_load_grid_energy:
    source: sensor.energy_house_load_grid
    name: "Yearly House Load Grid (Energy)"
    cycle: yearly
  #### Cost
  hourly_house_load_grid_cost:
    source: sensor.house_load_grid_cost_2
    name: "Hourly House Load Grid (Cost)"
    cycle: hourly
  daily_house_load_grid_cost:
    source: sensor.house_load_grid_cost_2
    name: "Daily House Load Grid (Cost)"
    cycle: daily
  monthly_house_load_grid_cost:
    source: sensor.house_load_grid_cost_2
    name: "Monthly House Load Grid (Cost)"
    cycle: monthly
  quarterly_house_load_grid_cost:
    source: sensor.house_load_grid_cost_2
    name: "Quarterly House Load Grid (Cost)"
    cycle: quarterly
  yearly_house_load_grid_cost:
    source: sensor.house_load_grid_cost_2
    name: "Yearly House Load Grid (Cost)"
    cycle: yearly
  ### House Load Yield
  #### Energy
  hourly_house_load_yield_energy:
    source: sensor.energy_house_load_yield
    name: "Hourly House Load Yield (Energy)"
    cycle: hourly
  daily_house_load_yield_energy:
    source: sensor.energy_house_load_yield
    name: "Daily House Load Yield (Energy)"
    cycle: daily
  monthly_house_load_yield_energy:
    source: sensor.energy_house_load_yield
    name: "Monthly House Load Yield (Energy)"
    cycle: monthly
  quarterly_house_load_yield_energy:
    source: sensor.energy_house_load_yield
    name: "Quarterly House Load Yield (Energy)"
    cycle: quarterly
  yearly_house_load_yield_energy:
    source: sensor.energy_house_load_yield
    name: "Yearly House Load Yield (Energy)"
    cycle: yearly
  #### Saving
  hourly_house_load_yield_saving:
    source: sensor.house_load_yield_saving_2
    name: "Hourly House Load Yield (Saving)"
    cycle: hourly
  daily_house_load_yield_saving:
    source: sensor.house_load_yield_saving_2
    name: "Daily House Load Yield (Saving)"
    cycle: daily
  monthly_house_load_yield_saving:
    source: sensor.house_load_yield_saving_2
    name: "Monthly House Load Yield (Saving)"
    cycle: monthly
  quarterly_house_load_yield_saving:
    source: sensor.house_load_yield_saving_2
    name: "Quarterly House Load Yield (Saving)"
    cycle: quarterly
  yearly_house_load_yield_saving:
    source: sensor.house_load_yield_saving_2
    name: "Yearly House Load Yield (Saving)"
    cycle: yearly
  ### Import
  #### Energy
  hourly_import_energy:
    source: sensor.energy_import
    name: "Hourly Import (Energy)"
    cycle: hourly
  daily_import_energy:
    source: sensor.energy_import
    name: "Daily Import (Energy)"
    cycle: daily
  monthly_import_energy:
    source: sensor.energy_import
    name: "Monthly Import (Energy)"
    cycle: monthly
  quarterly_import_energy:
    source: sensor.energy_import
    name: "Quarterly Import (Energy)"
    cycle: quarterly
  yearly_import_energy:
    source: sensor.energy_import
    name: "Yearly Import (Energy)"
    cycle: yearly
  #### Cost
  hourly_import_cost:
    source: sensor.import_cost_2
    name: "Hourly Import (Cost)"
    cycle: hourly
  daily_import_cost:
    source: sensor.import_cost_2
    name: "Daily Import (Cost)"
    cycle: daily
  monthly_import_cost:
    source: sensor.import_cost_2
    name: "Monthly Import (Cost)"
    cycle: monthly
  quarterly_import_cost:
    source: sensor.import_cost_2
    name: "Quarterly Import (Cost)"
    cycle: quarterly
  yearly_import_cost:
    source: sensor.import_cost_2
    name: "Yearly Import (Cost)"
    cycle: yearly
  ### Export Yield
  #### Energy
  hourly_export_yield_energy:
    source: sensor.energy_export_yield
    name: "Hourly Export Yield (Energy)"
    cycle: hourly
  daily_export_yield_energy:
    source: sensor.energy_export_yield
    name: "Daily Export Yield (Energy)"
    cycle: daily
  monthly_export_yield_energy:
    source: sensor.energy_export_yield
    name: "Monthly Export Yield (Energy)"
    cycle: monthly
  quarterly_export_yield_energy:
    source: sensor.energy_export_yield
    name: "Quarterly Export Yield (Energy)"
    cycle: quarterly
  yearly_export_yield_energy:
    source: sensor.energy_export_yield
    name: "Yearly Export Yield (Energy)"
    cycle: yearly
  #### Sale
  hourly_export_yield_sale:
    source: sensor.export_yield_sale_2
    name: "Hourly Export Yield (Sale)"
    cycle: hourly
  daily_export_yield_sale:
    source: sensor.export_yield_sale_2
    name: "Daily Export Yield (Sale)"
    cycle: daily
  monthly_export_yield_sale:
    source: sensor.export_yield_sale_2
    name: "Monthly Export Yield (Sale)"
    cycle: monthly
  quarterly_export_yield_sale:
    source: sensor.export_yield_sale_2
    name: "Quarterly Export Yield (Sale)"
    cycle: quarterly
  yearly_export_yield_sale:
    source: sensor.export_yield_sale_2
    name: "Yearly Export Yield (Sale)"
    cycle: yearly
    ### Yield Total
  #### Energy
  hourly_yield_total_energy:
    source: sensor.energy_yield_total
    name: "Hourly Yield Total (Energy)"
    cycle: hourly
  daily_yield_total_energy:
    source: sensor.energy_yield_total
    name: "Daily Yield Total (Energy)"
    cycle: daily
  monthly_yield_total_energy:
    source: sensor.energy_yield_total
    name: "Monthly Yield Total (Energy)"
    cycle: monthly
  quarterly_yield_total_energy:
    source: sensor.energy_yield_total
    name: "Quarterly Yield Total (Energy)"
    cycle: quarterly
  yearly_yield_total_energy:
    source: sensor.energy_yield_total
    name: "Yearly Yield Total (Energy)"
    cycle: yearly
  ### Yield #1
  #### Energy
  hourly_yield_1_energy:
    source: sensor.energy_yield_1
    name: "Hourly Yield 1 (Energy)"
    cycle: hourly
  daily_yield_1_energy:
    source: sensor.energy_yield_1
    name: "Daily Yield 1 (Energy)"
    cycle: daily
  monthly_yield_1_energy:
    source: sensor.energy_yield_1
    name: "Monthly Yield 1 (Energy)"
    cycle: monthly
  quarterly_yield_1_energy:
    source: sensor.energy_yield_1
    name: "Quarterly Yield 1 (Energy)"
    cycle: quarterly
  yearly_yield_1_energy:
    source: sensor.energy_yield_1
    name: "Yearly Yield 1 (Energy)"
    cycle: yearly
  ### Yield #2
  #### Energy
  hourly_yield_2_energy:
    source: sensor.energy_yield_2
    name: "Hourly Yield 2 (Energy)"
    cycle: hourly
  daily_yield_2_energy:
    source: sensor.energy_yield_2
    name: "Daily Yield 2 (Energy)"
    cycle: daily
  monthly_yield_2_energy:
    source: sensor.energy_yield_2
    name: "Monthly Yield 2 (Energy)"
    cycle: monthly
  quarterly_yield_2_energy:
    source: sensor.energy_yield_2
    name: "Quarterly Yield 2 (Energy)"
    cycle: quarterly
  yearly_yield_2_energy:
    source: sensor.energy_yield_2
    name: "Yearly Yield 2 (Energy)"
    cycle: yearly
